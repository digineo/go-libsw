// Code generated by "stringer -output generate_stringers.go -type=AttributeType,DataType,Group,LinkAttr,PortAttribute,PortMapAttribute"; DO NOT EDIT.

package swlib

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AttrUnspec-0]
	_ = x[AttrType-1]
	_ = x[AttrID-2]
	_ = x[AttrDevName-3]
	_ = x[AttrAlias-4]
	_ = x[AttrName-5]
	_ = x[AttrVLANs-6]
	_ = x[AttrPorts-7]
	_ = x[AttrPortMap-8]
	_ = x[AttrCPUPort-9]
	_ = x[AttrOPID-10]
	_ = x[AttrOPType-11]
	_ = x[AttrOPName-12]
	_ = x[AttrOPPort-13]
	_ = x[AttrOPVLAN-14]
	_ = x[AttrOPValueInt-15]
	_ = x[AttrOPValueStr-16]
	_ = x[AttrOPValuePorts-17]
	_ = x[AttrOPValueLink-18]
	_ = x[AttrOPDescription-19]
	_ = x[AttrPort-20]
}

const _AttributeType_name = "AttrUnspecAttrTypeAttrIDAttrDevNameAttrAliasAttrNameAttrVLANsAttrPortsAttrPortMapAttrCPUPortAttrOPIDAttrOPTypeAttrOPNameAttrOPPortAttrOPVLANAttrOPValueIntAttrOPValueStrAttrOPValuePortsAttrOPValueLinkAttrOPDescriptionAttrPort"

var _AttributeType_index = [...]uint8{0, 10, 18, 24, 35, 44, 52, 61, 70, 81, 92, 100, 110, 120, 130, 140, 154, 168, 184, 199, 216, 224}

func (i AttributeType) String() string {
	if i < 0 || i >= AttributeType(len(_AttributeType_index)-1) {
		return "AttributeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AttributeType_name[_AttributeType_index[i]:_AttributeType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DataTypeUnspec-0]
	_ = x[DataTypeInt-1]
	_ = x[DataTypeString-2]
	_ = x[DataTypePorts-3]
	_ = x[DataTypeLink-4]
	_ = x[DataTypeNoVal-5]
}

const _DataType_name = "DataTypeUnspecDataTypeIntDataTypeStringDataTypePortsDataTypeLinkDataTypeNoVal"

var _DataType_index = [...]uint8{0, 14, 25, 39, 52, 64, 77}

func (i DataType) String() string {
	if i >= DataType(len(_DataType_index)-1) {
		return "DataType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DataType_name[_DataType_index[i]:_DataType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GroupGlobal-0]
	_ = x[GroupVLAN-1]
	_ = x[GroupPort-2]
}

const _Group_name = "GroupGlobalGroupVLANGroupPort"

var _Group_index = [...]uint8{0, 11, 20, 29}

func (i Group) String() string {
	if i < 0 || i >= Group(len(_Group_index)-1) {
		return "Group(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Group_name[_Group_index[i]:_Group_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LinkAttrUnspec-0]
	_ = x[LinkAttrFlagLink-1]
	_ = x[LinkAttrFlagDuplex-2]
	_ = x[LinkAttrFlagANeg-3]
	_ = x[LinkAttrFlagTXFlow-4]
	_ = x[LinkAttrFlagRXFlow-5]
	_ = x[LinkAttrSpeed-6]
	_ = x[LinkAttrFlagEEE100BaseT-7]
	_ = x[LinkAttrFlagEEE1000BaseT-8]
}

const _LinkAttr_name = "LinkAttrUnspecLinkAttrFlagLinkLinkAttrFlagDuplexLinkAttrFlagANegLinkAttrFlagTXFlowLinkAttrFlagRXFlowLinkAttrSpeedLinkAttrFlagEEE100BaseTLinkAttrFlagEEE1000BaseT"

var _LinkAttr_index = [...]uint8{0, 14, 30, 48, 64, 82, 100, 113, 136, 160}

func (i LinkAttr) String() string {
	if i < 0 || i >= LinkAttr(len(_LinkAttr_index)-1) {
		return "LinkAttr(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LinkAttr_name[_LinkAttr_index[i]:_LinkAttr_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PortAttrUnspec-0]
	_ = x[PortAttrID-1]
	_ = x[PortAttrFlagTagged-2]
}

const _PortAttribute_name = "PortAttrUnspecPortAttrIDPortAttrFlagTagged"

var _PortAttribute_index = [...]uint8{0, 14, 24, 42}

func (i PortAttribute) String() string {
	if i < 0 || i >= PortAttribute(len(_PortAttribute_index)-1) {
		return "PortAttribute(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PortAttribute_name[_PortAttribute_index[i]:_PortAttribute_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PortMapAttrPorts-0]
	_ = x[PortMapAttrSegment-1]
	_ = x[PortMapAttrVirt-2]
}

const _PortMapAttribute_name = "PortMapAttrPortsPortMapAttrSegmentPortMapAttrVirt"

var _PortMapAttribute_index = [...]uint8{0, 16, 34, 49}

func (i PortMapAttribute) String() string {
	if i < 0 || i >= PortMapAttribute(len(_PortMapAttribute_index)-1) {
		return "PortMapAttribute(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PortMapAttribute_name[_PortMapAttribute_index[i]:_PortMapAttribute_index[i+1]]
}
